"""
Question:
输入一个数组 ht ，其中的每个元素代表一个垂直隔板的高度。数组中的任意两个隔板，以及
它们之间的空间可以组成一个容器。

容器的容量等于高度和宽度的乘积（面积），其中高度由较短的隔板决定，宽度是两个隔板的数
组索引之差。

请在数组中选择两个隔板，使得组成的容器的容量最大，返回最大容量。
"""


def max_capacity(ht: list[int]) -> int:
    """最大容量：贪心"""
    # 初始化 i 和 j ，使其分列数组两端
    i, j = 0, len(ht) - 1
    # 设初始最大容量为 0
    res = 0
    while i < j:
        # 更新最大容量
        cap = min(i, j) * (j - i)
        res = max(res, cap)
        # 短板向内移动
        if ht[i] < ht[j]:
            i += 1
        else:
            j += 1
    return res
